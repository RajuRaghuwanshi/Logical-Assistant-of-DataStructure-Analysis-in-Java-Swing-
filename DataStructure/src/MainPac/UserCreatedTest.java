/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPac;

import ActionPerformClasses.*;
import ImgPanel.MainImg;
import javax.swing.JOptionPane;

/**
 *
 * @author Hitendra
 */
public class UserCreatedTest extends javax.swing.JPanel {

    String[][] questionData;
    String[][] questionDataTemp;
    UserTestClass uc2;
    UserNotesClass uc1;
    Mainframe mf;
    String[] newbasictestdata, oldbasictestdata;
    int questionIndexNo = 0, qnolb = 0, mouse = 0, fornext = 0;
    boolean updatetoken = false;

    public UserCreatedTest() {
        initComponents();
        uc1 = new UserNotesClass();
        uc2 = new UserTestClass();
        previous.setEnabled(false);
        save.setEnabled(false);
        mainImg7.setImg("C:\\ProgramData\\DataStructure\\resource\\main.jpg");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        testname = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        noofquestionentered = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        mainImg7 = new ImgPanel.MainImg();
        q = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        option1 = new javax.swing.JTextField();
        option2 = new javax.swing.JTextField();
        option3 = new javax.swing.JTextField();
        option4 = new javax.swing.JTextField();
        anscombo = new javax.swing.JComboBox();
        qno = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        exitwithoutsave = new javax.swing.JButton();

        setAutoscrolls(true);
        setPreferredSize(new java.awt.Dimension(780, 470));

        jSplitPane1.setDividerLocation(55);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setEnabled(false);
        jSplitPane1.setRequestFocusEnabled(false);
        jSplitPane1.setVerifyInputWhenFocusTarget(false);
        jSplitPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSplitPane1MouseEntered(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Test Name :-");

        testname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        testname.setText("Test Name");
        testname.setOpaque(true);

        save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("No Of Question You Enter :-");

        noofquestionentered.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        noofquestionentered.setText("0");
        noofquestionentered.setOpaque(true);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSeparator1.setOpaque(true);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(testname, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(noofquestionentered, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(save)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(testname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(noofquestionentered, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(save))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        mainImg7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainImg7.setPreferredSize(new java.awt.Dimension(782, 496));

        q.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        q.setText("Q.");

        question.setColumns(20);
        question.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question.setRows(3);
        question.setTabSize(4);
        question.setText("Enter Question");
        jScrollPane6.setViewportView(question);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("A.");
        jLabel11.setOpaque(true);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("B.");
        jLabel12.setOpaque(true);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("C.");
        jLabel13.setOpaque(true);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("D.");
        jLabel14.setOpaque(true);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Ans.");
        jLabel15.setOpaque(true);

        option1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        option1.setText("Option 1");

        option2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        option2.setText("Option 2");

        option3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        option3.setText("Option 3");

        option4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        option4.setText("Option 4");

        anscombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        anscombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));

        qno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        qno.setText("1");
        qno.setOpaque(true);

        delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        delete.setText("Delete this Question");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        previous.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        previous.setText(" <<Previous");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        next.setText("Next >>");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        exitwithoutsave.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exitwithoutsave.setText("Exit without save");
        exitwithoutsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitwithoutsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainImg7Layout = new javax.swing.GroupLayout(mainImg7);
        mainImg7.setLayout(mainImg7Layout);
        mainImg7Layout.setHorizontalGroup(
            mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainImg7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exitwithoutsave)
                    .addGroup(mainImg7Layout.createSequentialGroup()
                        .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainImg7Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainImg7Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(anscombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(delete)
                                        .addGap(49, 49, 49)
                                        .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                        .addComponent(next))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainImg7Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(option3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainImg7Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(option4, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(mainImg7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(option2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainImg7Layout.createSequentialGroup()
                                .addComponent(q)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(qno, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(mainImg7Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(option1))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE))))
                        .addGap(1, 1, 1)))
                .addGap(61, 61, 61))
        );
        mainImg7Layout.setVerticalGroup(
            mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainImg7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(option2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(option3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(22, 22, 22)
                .addGroup(mainImg7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(anscombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete)
                    .addComponent(previous)
                    .addComponent(next))
                .addGap(33, 33, 33)
                .addComponent(exitwithoutsave)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(mainImg7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setRef(Mainframe mf) {
        this.mf = mf;
    }
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        if (!updatetoken) {
            if (!(question.getText().equals("Enter Question") && option1.getText().equals("Option 1") && option2.getText().equals("Option 2") && option3.getText().equals("Option 3") && option4.getText().equals("Option 4"))) {
                if (!(question.getText().equals("") && option1.getText().equals("") && option2.getText().equals("") && option3.getText().equals("") && option4.getText().equals(""))) {
                    questionData[questionIndexNo][0] = question.getText();
                    questionData[questionIndexNo][1] = option1.getText();
                    questionData[questionIndexNo][2] = option2.getText();
                    questionData[questionIndexNo][3] = option3.getText();
                    questionData[questionIndexNo][4] = option4.getText();
                    questionData[questionIndexNo][5] = ((anscombo.getSelectedIndex() == 0) ? "A" : (anscombo.getSelectedIndex() == 1) ? "B" : ((anscombo.getSelectedIndex() == 2) ? "C" : "D"));

                    questionIndexNo++;
                    qno.setText("" + (questionIndexNo + 1));
                    if (questionIndexNo > 0) {
                        previous.setEnabled(true);
                    }
                    if (qnolb <= questionIndexNo) {
                        if (qnolb < questionIndexNo) {
                            noofquestionentered.setText("" + (++qnolb));
                        }
                        initializeDataEnter();
                    } else {
                        question.setText(questionData[questionIndexNo][0]);
                        option1.setText(questionData[questionIndexNo][1]);
                        option2.setText(questionData[questionIndexNo][2]);
                        option3.setText(questionData[questionIndexNo][3]);
                        option4.setText(questionData[questionIndexNo][4]);
                        anscombo.setSelectedItem(questionData[questionIndexNo][5]);
                    }
                    if (questionIndexNo == Integer.parseInt(newbasictestdata[1])) {
                        next.setEnabled(false);
                        dataEnterSetEnable(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please Enter Question &  All Option");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please Enter Question &  All Option");
            }

        } else {
            if (!(question.getText().equals("Enter Question") && option1.getText().equals("Option 1") && option2.getText().equals("Option 2") && option3.getText().equals("Option 3") && option4.getText().equals("Option 4"))) {
                if (!(question.getText().equals("") && option1.getText().equals("") && option2.getText().equals("") && option3.getText().equals("") && option4.getText().equals(""))) {
                    questionData[questionIndexNo][0] = question.getText();
                    questionData[questionIndexNo][1] = option1.getText();
                    questionData[questionIndexNo][2] = option2.getText();
                    questionData[questionIndexNo][3] = option3.getText();
                    questionData[questionIndexNo][4] = option4.getText();
                    questionData[questionIndexNo][5] = ((anscombo.getSelectedIndex() == 0) ? "A" : (anscombo.getSelectedIndex() == 1) ? "B" : ((anscombo.getSelectedIndex() == 2) ? "C" : "D"));
                    questionIndexNo++;

                    if (questionIndexNo < Integer.parseInt(oldbasictestdata[1])) {
                        question.setText(questionData[questionIndexNo][0]);
                        option1.setText(questionData[questionIndexNo][1]);
                        option2.setText(questionData[questionIndexNo][2]);
                        option3.setText(questionData[questionIndexNo][3]);
                        option4.setText(questionData[questionIndexNo][4]);
                        anscombo.setSelectedItem(questionData[questionIndexNo][5]);
                    } else {
                        initializeDataEnter();
                        noofquestionentered.setText("" + (qnolb++));
                    }
                    qno.setText("" + (questionIndexNo + 1));
                    if (questionIndexNo > 0) {
                        previous.setEnabled(true);
                    }
                    if (questionIndexNo == Integer.parseInt(newbasictestdata[1])) {
                        next.setEnabled(false);
                        dataEnterSetEnable(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please Enter Question &  All Option");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please Enter Question &  All Option");
            }
        }
        if (Integer.parseInt(newbasictestdata[1]) == questionIndexNo) {
            save.setEnabled(true);
        }
    }//GEN-LAST:event_nextActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // TODO add your handling code here:
        //q.setText(--qnolb+"");
        if (questionIndexNo != 0) {
            qno.setText("" + questionIndexNo);
            question.setText(questionData[--questionIndexNo][0]);
            option1.setText(questionData[questionIndexNo][1]);
            option2.setText(questionData[questionIndexNo][2]);
            option3.setText(questionData[questionIndexNo][3]);
            option4.setText(questionData[questionIndexNo][4]);
            anscombo.setSelectedItem(questionData[questionIndexNo][5]);
            next.setEnabled(true);
            dataEnterSetEnable(true);
        }
        if (questionIndexNo <= 0) {
            previous.setEnabled(false);
        }
    }//GEN-LAST:event_previousActionPerformed
    MainImg mig1, mig2;
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try {
            uc2.saveTest(newbasictestdata, questionData, uc1);
            mouse = 0;
            this.setVisible(false);
            mf.setBasicTestPanelVisible();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "" + ex.getMessage(), "Error", 0);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jSplitPane1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSplitPane1MouseEntered
        // TODO add your handling code here:
        if (mouse == 0) {
            questionIndexNo = 0;
            qnolb = 0;
            fornext = 0;
            previous.setEnabled(false);
            save.setEnabled(false);
            uc2 = mf.getRefUserTestClass();
            newbasictestdata = uc2.getBasicTestData();
            testname.setText(newbasictestdata[0]);
            questionData = new String[Integer.parseInt(newbasictestdata[1])][6];
            updatetoken = uc2.isUpdate();
            if (updatetoken) {
                oldbasictestdata = uc2.getOldBasicTestData();
                noofquestionentered.setText(oldbasictestdata[1]);
                qnolb = Integer.parseInt(oldbasictestdata[1]);
                if (!oldbasictestdata[1].equals(newbasictestdata[1])) {
                    questionData = uc2.increaseSizeOfTestData(uc2.getTestData(testname.getText(), false, uc1), Integer.parseInt(newbasictestdata[1]));
                } else {
                    questionData = uc2.getTestData(newbasictestdata[0], false, uc1);
                }
                question.setText(questionData[questionIndexNo][0]);
                option1.setText(questionData[questionIndexNo][1]);
                option2.setText(questionData[questionIndexNo][2]);
                option3.setText(questionData[questionIndexNo][3]);
                option4.setText(questionData[questionIndexNo][4]);
                anscombo.setSelectedItem(questionData[questionIndexNo][5]);
                delete.setEnabled(true);
            } else {
                initializeDataEnter();
                delete.setEnabled(false);
            }
            mouse = 1;
        }
    }//GEN-LAST:event_jSplitPane1MouseEntered

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Do you want to delete this question ?", "Confirm", 0);
        if (x == 0) {
            questionData = uc2.removeQuestion(questionData, Integer.parseInt(qno.getText()) - 1);
            qno.setText("1");
            questionIndexNo = 0;
            noofquestionentered.setText((Integer.parseInt(noofquestionentered.getText()) - 1) + "");
            oldbasictestdata[1] = (Integer.parseInt(oldbasictestdata[1]) - 1) + "";
            question.setText(questionData[questionIndexNo][0]);
            option1.setText(questionData[questionIndexNo][1]);
            option2.setText(questionData[questionIndexNo][2]);
            option3.setText(questionData[questionIndexNo][3]);
            option4.setText(questionData[questionIndexNo][4]);
            anscombo.setSelectedItem(questionData[questionIndexNo][5]);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void exitwithoutsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitwithoutsaveActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Are you sure?");
        if (x == 0) {
            this.setVisible(false);
            mf.getRefBasicTestPanel().setVisible(true);
            mf.getRefChoiceTestPanel().setVisible(true);
        }
    }//GEN-LAST:event_exitwithoutsaveActionPerformed

    public void initializeDataEnter() {
        question.setText("Enter Question");
        option1.setText("Option 1");
        option2.setText("Option 2");
        option3.setText("Option 3");
        option4.setText("Option 4");
        anscombo.setSelectedItem("A");
    }

    public void dataEnterSetEnable(boolean action) {
        question.setEditable(action);
        option1.setEditable(action);
        option2.setEditable(action);
        option3.setEditable(action);
        option4.setEditable(action);
        anscombo.setEnabled(action);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anscombo;
    private javax.swing.JButton delete;
    private javax.swing.JButton exitwithoutsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private ImgPanel.MainImg mainImg7;
    private javax.swing.JButton next;
    private javax.swing.JLabel noofquestionentered;
    private javax.swing.JTextField option1;
    private javax.swing.JTextField option2;
    private javax.swing.JTextField option3;
    private javax.swing.JTextField option4;
    private javax.swing.JButton previous;
    private javax.swing.JLabel q;
    private javax.swing.JLabel qno;
    private javax.swing.JTextArea question;
    private javax.swing.JButton save;
    private javax.swing.JLabel testname;
    // End of variables declaration//GEN-END:variables
}
